/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ({

/***/ 5:
/***/ (function(module, exports) {

var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var InspectorControls = wp.editor.InspectorControls;
var _wp$components = wp.components,
    SelectControl = _wp$components.SelectControl,
    CheckboxControl = _wp$components.CheckboxControl,
    TextControl = _wp$components.TextControl;

var icon = function icon() {
  return wp.element.createElement('i', { className: 'fas fa-user-plus fa-2x' });
};

// workaround to prevent the custom category from throwing an console warning
function setCategory() {
  if (window.location.href.indexOf('wp-admin') !== -1) {
    return 'idx-category';
  } else {
    return 'widgets';
  }
}

registerBlockType('idx-broker-platinum/impress-lead-signup-block', {
  title: __('IMPress Lead Signup', 'idx-broker-platinum'),
  icon: icon,
  category: setCategory(),
  attributes: {
    phone: {
      type: 'int',
      default: 0
    },
    styles: {
      type: 'int',
      default: 1
    },
    new_window: {
      type: 'int',
      default: 0
    },
    agent_id: {
      type: 'string'
    },
    password_field: {
      type: 'bool',
      default: false
    },
    button_text: {
      type: 'string',
      default: 'Sign Up!'
    }
  },
  edit: function edit(_ref) {
    var attributes = _ref.attributes,
        setAttributes = _ref.setAttributes;

    return wp.element.createElement(
      'div',
      null,
      wp.element.createElement(
        'div',
        { className: 'idx-block-placeholder-container' },
        wp.element.createElement('img', { src: lead_signup_image_url })
      ),
      wp.element.createElement(
        InspectorControls,
        null,
        wp.element.createElement(CheckboxControl, {
          label: __('Show phone number field?', 'idx-broker-platinum'),
          value: attributes.phone,
          checked: attributes.phone > 0,
          onChange: function onChange(value) {
            setAttributes({ phone: value > 0 ? 1 : 0 });
          }
        }),
        wp.element.createElement(CheckboxControl, {
          label: __('Default Styles?', 'idx-broker-platinum'),
          value: attributes.styles,
          checked: attributes.styles > 0,
          onChange: function onChange(value) {
            setAttributes({ styles: value > 0 ? 1 : 0 });
          }
        }),
        wp.element.createElement(CheckboxControl, {
          label: __('Open in a New Window?', 'idx-broker-platinum'),
          value: attributes.new_window,
          checked: attributes.new_window > 0,
          onChange: function onChange(value) {
            setAttributes({ new_window: value > 0 ? 1 : 0 });
          }
        }),
        wp.element.createElement(CheckboxControl, {
          label: __('Add password form field?', 'idx-broker-platinum'),
          value: attributes.password_field,
          checked: !!attributes.password_field,
          onChange: function onChange(value) {
            setAttributes({ password_field: value });
          }
        }),
        wp.element.createElement(TextControl, {
          label: __('Sign up button text:', 'idx-broker-platinum'),
          value: attributes.button_text,
          onChange: function onChange(value) {
            setAttributes({ button_text: value });
          }
        }),
        wp.element.createElement(SelectControl, {
          label: __('Route to Agent:', 'idx-broker-platinum'),
          value: attributes.agent_id,
          options: lead_signup_agent_list || [{ label: 'All', value: '' }],
          onChange: function onChange(value) {
            setAttributes({ agent_id: value });
          }
        })
      )
    );
  },
  save: function save() {
    return null;
  }
});

/***/ })

/******/ });